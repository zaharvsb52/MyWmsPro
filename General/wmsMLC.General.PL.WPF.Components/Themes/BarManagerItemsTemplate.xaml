<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:converters="clr-namespace:wmsMLC.General.PL.WPF.Components.Converters"
    xmlns:controls="clr-namespace:wmsMLC.General.PL.WPF.Components.Controls.Rcl"
    xmlns:helpers="clr-namespace:wmsMLC.General.PL.WPF.Components.Helpers">

    <converters:GlyphAlignmentGeneralToMainConverter x:Key="GlyphAlignmentGeneralToMainConverter" />
    <converters:GlyphSizeGeneralToMainConverter x:Key="GlyphSizeGeneralToMainConverter" />
    <converters:DisplayModeTypeGeneralToMainConverter x:Key="DisplayModeTypeGeneralToMainConverter" />

    <!-- Определяет размеры меня. В RCL размер Statusbar'а -->
    <!--<ItemsPanelTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=ItemsPanelTemplate}">
        <dxb:BarClientPanel IsItemsHost="True" Margin="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ClientPanelPadding}}" MinHeight="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ClientPanelMinHeight}}" Background="Transparent"  />
    </ItemsPanelTemplate>-->
    <!-- Определяет размеры меня. В RCL размер Statusbar'а -->

    <DataTemplate x:Key="CommandMenuItemTemplate">
        <ContentControl>
            <controls:CustomBarButtonItem Content="{Binding Caption}"
                Glyph="{Binding ImageSmall}"
                LargeGlyph="{Binding ImageLarge}"
                KeyGesture="{Binding HotKey}"
                GlyphAlignment="{Binding GlyphAlignment, Converter={StaticResource GlyphAlignmentGeneralToMainConverter}, Mode=OneTime}"
                GlyphSize="{Binding GlyphSize, Converter={StaticResource GlyphSizeGeneralToMainConverter}, Mode=OneTime}"
                BarItemDisplayMode="{Binding DisplayMode, Converter={StaticResource DisplayModeTypeGeneralToMainConverter}, Mode=OneTime}"
                Command="{Binding Command}"
                CommandParameter="{Binding CommandParameter}"
                IsEnabled="{Binding IsEnable, Mode=TwoWay}"
                IsVisible="{Binding IsVisible, Mode=TwoWay}" 
                Focusable="False"/>
        </ContentControl>
    </DataTemplate>
    
    <DataTemplate x:Key="SeparatorMenuItemTemplate">
        <ContentControl>
            <dxb:BarItemSeparator />
        </ContentControl>
    </DataTemplate>

    <helpers:MenuItemTemplateSelector x:Key="ItemTemplateSelector" CommandTemplate="{StaticResource CommandMenuItemTemplate}" SeparatorTemplate="{StaticResource SeparatorMenuItemTemplate}"/>

    <DataTemplate x:Key="BarTemplate">
        <ContentControl>
            <controls:CustomBar Caption="{Binding Caption}"
                ItemLinksSource="{Binding MenuItems}"
                ItemTemplateSelector="{StaticResource ItemTemplateSelector}" 
                Visible="{Binding IsVisible, Mode=TwoWay}"
                IsEnabled="{Binding IsEnable, Mode=TwoWay}"
                GlyphSize="{Binding GlyphSize, Converter={StaticResource GlyphSizeGeneralToMainConverter}, Mode=OneTime}"
                Focusable="False"/>
        </ContentControl>
    </DataTemplate>

    <Style x:Key="BarStyle" TargetType="dxb:Bar">
        <Setter Property="ItemTemplateSelector" Value="{StaticResource ItemTemplateSelector}" />
        <Setter Property="Focusable" Value="False"/>
    </Style>

    <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=DragWidgetTemplate, ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}}" TargetType="{x:Type dxb:DragWidget}">
        <Grid/>
    </ControlTemplate>
</ResourceDictionary>