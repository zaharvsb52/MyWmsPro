<controls:DXPanelView x:Class="wmsMLC.General.PL.WPF.Components.Controls.Rcl.CustomSelectView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:controls="clr-namespace:wmsMLC.General.PL.WPF.Components.Controls.Rcl"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
    xmlns:converters="clr-namespace:wmsMLC.General.PL.WPF.Components.Converters"
    mc:Ignorable="d" 
    d:DesignHeight="300" d:DesignWidth="300">

    <controls:DXPanelView.Resources>
        <dx:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:CellStyleByThemeConverter x:Key="CellStyleByThemeConverter" />

        <Style x:Key="RclDefaultCellStyle" TargetType="dxg:LightweightCellEditor">
            <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}, ResourceKey=GridDataRowDelimiterBrush}}" />
            <Style.Triggers>
                <Trigger Property="SelectionState" Value="Focused">
                    <!--<Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}, ResourceKey=CellBorderFocusedBrush}}" />-->
                    <Setter Property="Background" Value="#FFB1D6F0" />
                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}, ResourceKey=CellTextFocusedBrush}}" />
                </Trigger>
                <Trigger Property="SelectionState" Value="Selected">
                    <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}, ResourceKey=BorderSelectedBrush}}" />
                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}, ResourceKey=TextRowSelectedBrush}}" />
                </Trigger>
                <Trigger Property="SelectionState" Value="FocusedAndSelected">
                    <Setter Property="Background" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}, ResourceKey=BorderFocusedBrush}}" />
                    <Setter Property="TextBlock.Foreground" Value="{DynamicResource {dxgt:GridRowThemeKey ResourceKey=TextFocusedBrush}}" />
                </Trigger>
                <Trigger Property="RowSelectionState" Value="Focused">
                    <Setter Property="BorderBrush" Value="{DynamicResource {dxgt:GridRowThemeKey ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}, ResourceKey=CellBorderFocusedBorderBrush}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </controls:DXPanelView.Resources>

        <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <controls:RclGridControl x:Name="RclGridControl"
            AutoShowAutoFilterRowWhenRowsCountMoreThan="{Binding AutoShowAutoFilterRowWhenRowsCountMoreThan}"
            VerifyColumnsSourceChanged="{Binding VerifyColumnsSourceChanged}"
            ShowTotalRow="{Binding ShowTotalRow}"
            TotalRowItemFilteredSymbolIsVisible="False"
            TotalRowItemAdditionalInfo ="{Binding TotalRowItemAdditionalInfo}"
            ColumnsSource="{Binding Fields}"
            SelectionMode="None"
            dx:DXSerializer.SerializationID="GridControl"
            dx:DXSerializer.StoreLayoutMode="All"
            dxg:GridSerializationOptions.AddNewColumns="False"
            dxg:GridSerializationOptions.RemoveOldColumns="False"
            RestoredLayoutFromXml="OnRestoredLayoutFromXml"
            SelectedItemChanged="OnSelectedItemChanged"
            ItemsSourceChanged="OnItemsSourceChanged">

            <dxg:GridControl.View>
                <dxg:TableView 
                    NavigationStyle="Cell" 
                    ShowIndicator="False"
                    HorizontalScrollbarVisibility="Auto"
                    AllowEditing="False"
                    ShowFilterPanelMode="Never"
                    
                    AllowColumnFiltering="False"

                    ItemsSourceErrorInfoShowMode="None"
                    AllowMasterDetail="False"
                    AllowPerPixelScrolling="False"
                    ScrollAnimationMode="Linear"

                    SelectedRowsSource="{Binding SelectedItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    ShowGroupPanel="False"
                    IsRowCellMenuEnabled="True"
                    CellStyle="{Binding Converter={StaticResource CellStyleByThemeConverter}, ConverterParameter={StaticResource RclDefaultCellStyle}}">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="RowDoubleClick">
                            <i:InvokeCommandAction Command="{Binding SelectCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </dxg:TableView>
            </dxg:GridControl.View>
        </controls:RclGridControl>
        
        <Grid Grid.Row ="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.4*"/>
                <ColumnDefinition Width="0.3*"/>
                <ColumnDefinition Width="0.3*"/>
            </Grid.ColumnDefinitions>

            <controls:CustomButton Margin="0,0,2,0" Text="Выб." HotKey="Enter" Command="{Binding SelectCommand}" Visibility="{Binding ShowSelectMenuItem, Converter={StaticResource BoolToVisibilityConverter}}" />
            <controls:CustomButton Grid.Column="1" Margin="2,0" Text="{Binding FindMenuText}" Command="{Binding AutoFilterCommand}" Visibility="{Binding ShowMenu, Converter={StaticResource BoolToVisibilityConverter}}"/>
            <controls:CustomButton Grid.Column="2" Margin="2,0,0,0" Text="Очист." Command="{Binding ClearFilterCommand}" Visibility="{Binding ShowMenu, Converter={StaticResource BoolToVisibilityConverter}}"/>
        </Grid>

        <!--<controls:FooterMenu Grid.Row="2" x:Name="Menu" Margin="0" FontSize="{Binding FontSize}"/>-->
        <controls:FooterMenu Grid.Row="2" x:Name="Menu" Margin="0"/>

        <controls:CustomWaitIndicator Grid.RowSpan="3" IsBusy="{Binding Path=WaitIndicatorVisible}" />
    </Grid>
</controls:DXPanelView>
