<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys">

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpandButtonTemplate}" TargetType="{x:Type dx:ToggleStateButton}">
        <Grid Background="Transparent" Width="18" Height="18">
            <Grid x:Name="GlyphClose" Width="8" Height="5">
                <Path Stretch="Fill" Fill="#7FFFFFFF" Data="F1 M 1668.5,814L 1668.5,815L 1666.5,815L 1664.5,813L 1662.5,815L 1660.5,815L 1660.5,814L 1664.5,810L 1668.5,814 Z " Margin="0,1,0,-1" />
                <Path x:Name="PathClose" Stretch="Fill" Fill="#FF80838F" Data="F1 M 1668.5,814L 1668.5,815L 1666.5,815L 1664.5,813L 1662.5,815L 1660.5,815L 1660.5,814L 1664.5,810L 1668.5,814 Z " />
            </Grid>
            <Grid x:Name="GlyphOpen" Width="8" Height="5" Margin="0,1,0,0" Visibility="Collapsed">
                <Path Stretch="Fill" Fill="#7FFFFFFF" Data="F1 M 1668.5,818L 1668.5,817L 1666.5,817L 1664.5,819L 1662.5,817L 1660.5,817L 1660.5,818L 1664.5,822L 1668.5,818 Z " Margin="0,1,0,-1" />
                <Path x:Name="PathOpen" Stretch="Fill" Fill="#FF80838F" Data="F1 M 1668.5,818L 1668.5,817L 1666.5,817L 1664.5,819L 1662.5,817L 1660.5,817L 1660.5,818L 1664.5,822L 1668.5,818 Z " />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PathOpen" Property="Fill" Value="#FF201F35" />
                <Setter TargetName="PathClose" Property="Fill" Value="#FF201F35" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="PathOpen" Property="Fill" Value="#FF201F35" />
                <Setter TargetName="PathClose" Property="Fill" Value="#FF201F35" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Visibility" TargetName="GlyphOpen" Value="Visible" />
                <Setter Property="Visibility" TargetName="GlyphClose" Value="Hidden" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:CardTemplatesThemeKey ResourceKey=CardStyle}" TargetType="{x:Type ContentControl}">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True" />
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="Root" Background="#FFEBECEF" BorderBrush="#FFC2C4CB" BorderThickness="1" CornerRadius="1">
            <ContentPresenter />
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter TargetName="Root" Property="Background" Value="#FFFFFFFF" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}" TargetType="{x:Type dxg:GridCardHeaderContentPresenter}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextBlock.Foreground" Value="#FF201F35" />
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}" TargetType="{x:Type dxg:GridCardExpandButton}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,2,0" />
    </Style>

    <Style x:Key="{dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}" TargetType="{x:Type dxg:GridCardContentPresenter}">
        <Setter Property="Margin" Value="11" />
    </Style>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter Margin="11,3,11,3" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}" TargetType="{x:Type ContentControl}">
        <ContentPresenter />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}" TargetType="{x:Type ContentControl}">
        <Border x:Name="Root" Background="#FFEBECEF" CornerRadius="0,0,2,2">
            <Grid>
                <Border x:Name="Separator" Background="#7FFFFFFF" Height="1" VerticalAlignment="Top" />
                <ContentPresenter />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="dxg:GridViewBase.IsFocusedRow" Value="True">
                <Setter TargetName="Root" Property="BorderBrush" Value="#FF9DA0AA" />
                <Setter TargetName="Root" Property="Background" Value="#FFFFFFFF" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).MultiSelectMode, RelativeSource={RelativeSource TemplatedParent}}" Value="Row" />
                    <Condition Binding="{Binding Path=(dxg:RowData.RowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                    <Condition Binding="{Binding Path=(dxg:GridViewBase.IsFocusedRow), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                </MultiDataTrigger.Conditions>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False" />
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=HeaderPanelTemplate}" TargetType="{x:Type ContentControl}">
        <Grid x:Name="Root">
            <Border x:Name="HeaderBackground" BorderBrush="#FFEFF0F2" BorderThickness="0,1,0,0" CornerRadius="1,1,0,0">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFE6E8EB" Offset="0" />
                        <GradientStop Color="#FFE1E2E6" Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
                <Border x:Name="Border" BorderBrush="#FFD1D3D8" BorderThickness="0,0,0,1" />
            </Border>
            <Border dxg:FadeSelectionHelper.IsKeyboardFocusWithinView="{Binding Path=View.IsKeyboardFocusWithinView}" dxg:FadeSelectionHelper.FadeSelectionOnLostFocus="{Binding Path=View.FadeSelectionOnLostFocus}" />
            <ContentPresenter />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsExpanded}" Value="False">
                <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                <Setter TargetName="HeaderBackground" Property="CornerRadius" Value="1" />
            </DataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="dxg:GridViewBase.IsFocusedRow" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxg:GridViewBase.IsFocusedRow), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).MultiSelectMode, RelativeSource={RelativeSource TemplatedParent}}" Value="Row" />
                    <Condition Binding="{Binding Path=(dxg:RowData.RowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="Border" Value="#FFCDD3E4" />
                <Setter Property="BorderBrush" TargetName="HeaderBackground" Value="#FFEAF0FE" />
                <Setter Property="Background" TargetName="HeaderBackground">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDFE8FD" Offset="0" />
                            <GradientStop Color="#FFD8E3FD" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxg:GridViewBase.IsFocusedRow), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).MultiSelectMode, RelativeSource={RelativeSource TemplatedParent}}" Value="None" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="Border" Value="#FFCDD3E4" />
                <Setter Property="BorderBrush" TargetName="HeaderBackground" Value="#FFEAF0FE" />
                <Setter Property="Background" TargetName="HeaderBackground">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDFE8FD" Offset="0" />
                            <GradientStop Color="#FFD8E3FD" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxg:GridViewBase.IsFocusedRow), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                    <Condition Binding="{Binding Path=(dxg:RowData.RowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(dxg:GridControl.ActiveView).MultiSelectMode, RelativeSource={RelativeSource TemplatedParent}}" Value="Row" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="Border" Value="#FFCDD3E4" />
                <Setter Property="BorderBrush" TargetName="HeaderBackground" Value="#FFEEF3FE" />
                <Setter Property="Background" TargetName="HeaderBackground">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFE5ECFD" Offset="0" />
                            <GradientStop Color="#FFE0E8FD" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(dxg:RowData.RowData).IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter Property="dxg:FadeSelectionHelper.Opacity" TargetName="Root" Value="1" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxgt:GridCardThemeKey ResourceKey=ControlTemplate}">
        <ContentControl x:Name="card" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContainerTemplate}}" Style="{Binding Path=(dxg:GridControl.ActiveView).CardStyle, RelativeSource={RelativeSource TemplatedParent}}">
            <dxg:GridCardPanel x:Name="gridCardPanel" IsExpanded="{Binding Path=IsExpanded}">
                <dxg:GridCardPanel.Header>
                    <dxg:GridCardHeaderControl>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl Grid.Column="0" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderContentTemplate}}">
                                <dxg:GridCardHeaderContentPresenter Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=HeaderPresenterStyle}}" />
                            </ContentControl>
                            <ContentControl Grid.Column="1" Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ExpanderContentTemplate}}">
                                <dxg:GridCardExpandButton Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentExpandButtonStyle}}" />
                            </ContentControl>
                        </Grid>
                    </dxg:GridCardHeaderControl>
                </dxg:GridCardPanel.Header>
                <dxg:GridCardPanel.Body>
                    <ContentControl Template="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=DataContentTemplate}}">
                        <dxg:GridCardContentPresenter x:Name="presenter" Style="{DynamicResource {dxgt:GridCardThemeKey ResourceKey=ContentPresenterStyle}}" />
                    </ContentControl>
                </dxg:GridCardPanel.Body>
            </dxg:GridCardPanel>
        </ContentControl>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=View.CollapsedCardOrientation}" Value="Vertical">
                <Setter Property="RotateOnCollapse" Value="True" TargetName="gridCardPanel" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>