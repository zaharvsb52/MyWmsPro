<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:local="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/DevExpress.Xpf.Themes.GrayOne.v12.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/TransferControl.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="{dxt:TransferControlThemeKey ThemeName=GrayOne, ResourceKey=TransferControl_FadeStyle}" TargetType="{x:Type dx:TransferControl}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey ThemeName=GrayOne, FullName=DevExpress.Xpf.Core.TransferControl}}">
    <Setter Property="PreviousControlTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <ContentPresenter Name="PART_ContentPresenter" dxcore_unique_xmlns:DataObjectBase.NeedsResetEvent="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\TransferStyles.xaml;11;22">
            <ContentPresenter.Triggers>
              <EventTrigger RoutedEvent="dx:TransferControl.ContentChanged">
                <BeginStoryboard Name="opacityStoryboard">
                  <Storyboard>
                    <DoubleAnimation SpeedRatio="{Binding SpeedRatio, RelativeSource={RelativeSource TemplatedParent}}" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:1" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger>
              <EventTrigger xmlns:dxdobj="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Xpf.Core.v12.2" RoutedEvent="dxdobj:DataObjectBase.Reset">
                <SkipStoryboardToFill BeginStoryboardName="opacityStoryboard" />
              </EventTrigger>
            </ContentPresenter.Triggers>
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ControlTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <ContentPresenter Name="PART_ContentPresenter" dxcore_unique_xmlns:DataObjectBase.NeedsResetEvent="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\TransferStyles.xaml;31;22">
            <ContentPresenter.Triggers>
              <EventTrigger RoutedEvent="dx:TransferControl.ContentChanged">
                <BeginStoryboard Name="opacityStoryboard">
                  <Storyboard>
                    <DoubleAnimation SpeedRatio="{Binding SpeedRatio, RelativeSource={RelativeSource TemplatedParent}}" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger>
              <EventTrigger xmlns:dxdobj="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Xpf.Core.v12.2" RoutedEvent="dxdobj:DataObjectBase.Reset">
                <SkipStoryboardToFill BeginStoryboardName="opacityStoryboard" />
              </EventTrigger>
            </ContentPresenter.Triggers>
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxt:TransferControlThemeKey ThemeName=GrayOne, ResourceKey=TransferControl_TranslationFromLeftToRightStyle}" TargetType="{x:Type dx:TransferControl}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey ThemeName=GrayOne, FullName=DevExpress.Xpf.Core.TransferControl}}">
    <Setter Property="PreviousControlTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <ContentPresenter Name="PART_ContentPresenter" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\TransferStyles.xaml;54;22">
            <ContentPresenter.RenderTransform>
              <TranslateTransform />
            </ContentPresenter.RenderTransform>
            <ContentPresenter.Triggers>
              <EventTrigger RoutedEvent="dx:TransferControl.ContentChanged">
                <BeginStoryboard>
                  <Storyboard SpeedRatio="{Binding SpeedRatio, RelativeSource={RelativeSource TemplatedParent}}">
                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.X" Duration="0:0:1" From="0" To="{Binding ActualWidth, ElementName=PART_ContentPresenter}" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger>
            </ContentPresenter.Triggers>
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ControlTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <ContentPresenter Name="PART_ContentPresenter" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\TransferStyles.xaml;74;22">
            <ContentPresenter.RenderTransform>
              <TranslateTransform />
            </ContentPresenter.RenderTransform>
            <ContentPresenter.Triggers>
              <EventTrigger RoutedEvent="dx:TransferControl.ContentChanged">
                <BeginStoryboard>
                  <Storyboard SpeedRatio="{Binding SpeedRatio, RelativeSource={RelativeSource TemplatedParent}}">
                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.X" Duration="0:0:1" From="{Binding ActualWidth, ElementName=PART_ContentPresenter, Converter={dx:NegativeConverter}}" To="0" />
                  </Storyboard>
                </BeginStoryboard>
              </EventTrigger>
            </ContentPresenter.Triggers>
          </ContentPresenter>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{dxt:TransferControlThemeKey ThemeName=GrayOne, ResourceKey=TransferControl_Spin3DStyle}" TargetType="{x:Type dx:TransferControl}" BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey ThemeName=GrayOne, FullName=DevExpress.Xpf.Core.TransferControl}}">
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type dx:TransferControl}">
          <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\TransferStyles.xaml;98;22">
            <Border Visibility="Hidden" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\TransferStyles.xaml;99;26">
              <ContentPresenter Name="previousContent" Content="{TemplateBinding PreviousContent}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\TransferStyles.xaml;100;30" />
            </Border>
            <Border Name="contentBorder" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\TransferStyles.xaml;102;26">
              <ContentPresenter Name="content" Content="{TemplateBinding CurrentContent}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\TransferStyles.xaml;103;30" />
            </Border>
            <Viewport3D Name="PART_ContentPresenter" dxcore_unique_xmlns:DataObjectBase.NeedsResetEvent="True" IsHitTestVisible="False" ClipToBounds="False" Opacity="0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Themes\TransferStyles.xaml;105;26">
              <Viewport3D.Triggers>
                <EventTrigger RoutedEvent="dx:TransferControl.ContentChanged">
                  <BeginStoryboard Name="rotateStoryboard">
                    <Storyboard SpeedRatio="{Binding SpeedRatio, RelativeSource={RelativeSource TemplatedParent}}">
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentBorder" Storyboard.TargetProperty="Opacity">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CubeRotation" Storyboard.TargetProperty="Angle">
                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                        <SplineDoubleKeyFrame KeyTime="00:00:01" Value="540" KeySpline="0.257,0.008,0.304,0.998" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="Opacity" BeginTime="0:0:1">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                      </DoubleAnimationUsingKeyFrames>
                      <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentBorder" Storyboard.TargetProperty="Opacity" BeginTime="0:0:1">
                        <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                      </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                  </BeginStoryboard>
                </EventTrigger>
                <EventTrigger xmlns:dxdobj="clr-namespace:DevExpress.Xpf.Core;assembly=DevExpress.Xpf.Core.v12.2" RoutedEvent="dxdobj:DataObjectBase.Reset">
                  <SkipStoryboardToFill BeginStoryboardName="rotateStoryboard" />
                </EventTrigger>
              </Viewport3D.Triggers>
              <Viewport3D.Camera>
                <PerspectiveCamera LookDirection="0,0,-1" FieldOfView="20">
                  <PerspectiveCamera.Position>
                    <MultiBinding Converter="{dx:SpinStyleCameraPositionConverter}">
                      <Binding ElementName="content" Path="ActualWidth" />
                      <Binding RelativeSource="{RelativeSource Self}" Path="FieldOfView" />
                    </MultiBinding>
                  </PerspectiveCamera.Position>
                </PerspectiveCamera>
              </Viewport3D.Camera>
              <Viewport3D.Children>
                <ModelVisual3D>
                  <ModelVisual3D.Content>
                    <Model3DGroup>
                      <AmbientLight Color="#878787" />
                      <DirectionalLight Direction="-0.3,-0.4,-0.5" />
                    </Model3DGroup>
                  </ModelVisual3D.Content>
                </ModelVisual3D>
                <ModelVisual3D x:Name="Cube">
                  <ModelVisual3D.Transform>
                    <Transform3DGroup>
                      <ScaleTransform3D ScaleY="{Binding ActualHeight, ElementName=content}" ScaleX="{Binding ActualWidth, ElementName=content}" />
                      <RotateTransform3D>
                        <RotateTransform3D.Rotation>
                          <AxisAngleRotation3D x:Name="CubeRotation" Axis="0,1,0" Angle="0" />
                        </RotateTransform3D.Rotation>
                      </RotateTransform3D>
                    </Transform3DGroup>
                  </ModelVisual3D.Transform>
                  <ModelVisual3D.Content>
                    <GeometryModel3D x:Name="OB_Cube">
                      <GeometryModel3D.BackMaterial>
                        <DiffuseMaterial>
                          <DiffuseMaterial.Brush>
                            <VisualBrush ViewportUnits="Absolute" Transform="1,0,0,-1,0,1" Visual="{Binding ElementName=previousContent}">
                              <!--<VisualBrush.Visual>
                                                                <ContentPresenter Content="{TemplateBinding PreviousContent}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                                            </VisualBrush.Visual>-->
                            </VisualBrush>
                          </DiffuseMaterial.Brush>
                        </DiffuseMaterial>
                      </GeometryModel3D.BackMaterial>
                      <GeometryModel3D.Material>
                        <DiffuseMaterial>
                          <DiffuseMaterial.Brush>
                            <VisualBrush ViewportUnits="Absolute" Visual="{Binding ElementName=content}">
                              <VisualBrush.Transform>
                                <TransformGroup>
                                  <MatrixTransform Matrix="1,0,0,-1,0,1" />
                                  <ScaleTransform ScaleX="-1" CenterX="0.5" />
                                </TransformGroup>
                              </VisualBrush.Transform>
                            </VisualBrush>
                          </DiffuseMaterial.Brush>
                        </DiffuseMaterial>
                      </GeometryModel3D.Material>
                      <GeometryModel3D.Geometry>
                        <MeshGeometry3D x:Name="ME_Cube" Positions="-0.5,-0.5,0 -0.5,0.5,0 0.5,0.5,0 0.5,-0.5,0" TriangleIndices="0 1 2 0 2 3" TextureCoordinates="0,0 0,1 1,1 1,0" />
                      </GeometryModel3D.Geometry>
                    </GeometryModel3D>
                  </ModelVisual3D.Content>
                </ModelVisual3D>
              </Viewport3D.Children>
            </Viewport3D>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>