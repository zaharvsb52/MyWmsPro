<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    
    <ControlTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=TopLayoutTemplate}" TargetType="{x:Type dx:DXTabControl}">
        <Grid>
            <!--BEGIN WPF-->
            <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
            <!--END WPF-->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="0,2,0,0" x:Name="tabHeadersPanel">
                <!--BEGIN WPF-->
                <KeyboardNavigation.TabIndex>1</KeyboardNavigation.TabIndex>
                <KeyboardNavigation.DirectionalNavigation>Cycle</KeyboardNavigation.DirectionalNavigation>
                <KeyboardNavigation.TabNavigation>Once</KeyboardNavigation.TabNavigation>
                <Panel.ZIndex>1</Panel.ZIndex>
                <!--END WPF-->
                <!--ONLY SL<Canvas.ZIndex>1</Canvas.ZIndex>ONLY SL-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dx:ClippedContainer Grid.Column="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Style="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ClippedContainerTopLayoutStyle}}">
                    <dx:TabPanelContainer x:Name="panelContainer" Style="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=PanelContainerTopLayoutStyle}}">
                        <dx:TabPanelContainer.Resources>
                            <Storyboard x:Key="ScrollStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ItemsPanelTranslate" Storyboard.TargetProperty="X" Duration="0:0:0.4" To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="0" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </dx:TabPanelContainer.Resources>
                        <ItemsPresenter>
                            <ItemsPresenter.RenderTransform>
                                <TranslateTransform x:Name="ItemsPanelTranslate" />
                            </ItemsPresenter.RenderTransform>
                        </ItemsPresenter>
                    </dx:TabPanelContainer>
                </dx:ClippedContainer>
                <dx:TabControlScrollButton x:Name="PrevButton" Grid.Column="1" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=PrevButtonStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForHorizontalLayouts}}" />
                <dx:TabControlScrollButton x:Name="NextButton" Grid.Column="2" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=NextButtonStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForHorizontalLayouts}}" />
                <dx:HeaderMenu Grid.Column="3" x:Name="HeaderMenu" IsTabStop="False" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=HeaderMenuStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForHorizontalLayouts}}" />
            </Grid>
            <Grid Grid.Row="1" Name="PART_ContentHost">
                <dx:DXContentPresenter ContentTemplate="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=TopBackgroundTemplate}}" IsTabStop="False">
                    <!--ONLY SL<dx:ThemeManager.ApplyApplicationTheme>True</dx:ThemeManager.ApplyApplicationTheme>ONLY SL-->
                </dx:DXContentPresenter>
                <Grid Margin="{TemplateBinding Padding}">
                    <dx:DXContentPresenter x:Name="contentPresenter" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Content="{TemplateBinding SelectedItemContent}" ContentTemplate="{TemplateBinding SelectedItemContentTemplate}">
                        <!--BEGIN WPF-->
                        <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
                        <KeyboardNavigation.DirectionalNavigation>Contained</KeyboardNavigation.DirectionalNavigation>
                        <KeyboardNavigation.TabIndex>2</KeyboardNavigation.TabIndex>
                        <!--END WPF-->
                        <!--ONLY SL<dx:ThemeManager.ApplyApplicationTheme>True</dx:ThemeManager.ApplyApplicationTheme>ONLY SL-->
                    </dx:DXContentPresenter>
                    <dx:TabControlFastRenderPanel x:Name="fastRenderPanel" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Visibility="Collapsed">
                        <!--BEGIN WPF-->
                        <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
                        <KeyboardNavigation.DirectionalNavigation>Contained</KeyboardNavigation.DirectionalNavigation>
                        <KeyboardNavigation.TabIndex>2</KeyboardNavigation.TabIndex>
                        <!--END WPF-->
                    </dx:TabControlFastRenderPanel>
                </Grid>
            </Grid>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=BottomLayoutTemplate}" TargetType="{x:Type dx:DXTabControl}">
        <Grid>
            <!--BEGIN WPF-->
            <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
            <!--END WPF-->
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="1" Margin="0,0,0,2" x:Name="tabHeadersPanel">
                <!--BEGIN WPF-->
                <KeyboardNavigation.TabIndex>1</KeyboardNavigation.TabIndex>
                <KeyboardNavigation.DirectionalNavigation>Cycle</KeyboardNavigation.DirectionalNavigation>
                <KeyboardNavigation.TabNavigation>Once</KeyboardNavigation.TabNavigation>
                <Panel.ZIndex>1</Panel.ZIndex>
                <!--END WPF-->
                <!--ONLY SL<Canvas.ZIndex>1</Canvas.ZIndex>ONLY SL-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dx:ClippedContainer Grid.Column="0" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Style="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ClippedContainerBottomLayoutStyle}}">
                    <dx:TabPanelContainer x:Name="panelContainer" Style="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=PanelContainerBottomLayoutStyle}}">
                        <dx:TabPanelContainer.Resources>
                            <Storyboard x:Key="ScrollStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ItemsPanelTranslate" Storyboard.TargetProperty="X" Duration="0:0:0.4" To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="0" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </dx:TabPanelContainer.Resources>
                        <ItemsPresenter>
                            <ItemsPresenter.RenderTransform>
                                <TranslateTransform x:Name="ItemsPanelTranslate" />
                            </ItemsPresenter.RenderTransform>
                        </ItemsPresenter>
                    </dx:TabPanelContainer>
                </dx:ClippedContainer>
                <dx:TabControlScrollButton x:Name="PrevButton" Grid.Column="1" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=PrevButtonStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForHorizontalLayouts}}" />
                <dx:TabControlScrollButton x:Name="NextButton" Grid.Column="2" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=NextButtonStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForHorizontalLayouts}}" />
                <dx:HeaderMenu Grid.Column="3" x:Name="HeaderMenu" IsTabStop="False" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=HeaderMenuStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForHorizontalLayouts}}" />
            </Grid>
            <Grid Grid.Row="0" Name="PART_ContentHost">
                <dx:DXContentPresenter ContentTemplate="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=BottomBackgroundTemplate}}" IsTabStop="False">
                    <!--ONLY SL<dx:ThemeManager.ApplyApplicationTheme>True</dx:ThemeManager.ApplyApplicationTheme>ONLY SL-->
                </dx:DXContentPresenter>
                <Grid Margin="{TemplateBinding Padding}">
                    <dx:DXContentPresenter x:Name="contentPresenter" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Content="{TemplateBinding SelectedItemContent}" ContentTemplate="{TemplateBinding SelectedItemContentTemplate}">
                        <!--BEGIN WPF-->
                        <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
                        <KeyboardNavigation.DirectionalNavigation>Contained</KeyboardNavigation.DirectionalNavigation>
                        <KeyboardNavigation.TabIndex>2</KeyboardNavigation.TabIndex>
                        <!--END WPF-->
                        <!--ONLY SL<dx:ThemeManager.ApplyApplicationTheme>True</dx:ThemeManager.ApplyApplicationTheme>ONLY SL-->
                    </dx:DXContentPresenter>
                    <dx:TabControlFastRenderPanel x:Name="fastRenderPanel" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Visibility="Collapsed">
                        <!--BEGIN WPF-->
                        <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
                        <KeyboardNavigation.DirectionalNavigation>Contained</KeyboardNavigation.DirectionalNavigation>
                        <KeyboardNavigation.TabIndex>2</KeyboardNavigation.TabIndex>
                        <!--END WPF-->
                    </dx:TabControlFastRenderPanel>
                </Grid>
            </Grid>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=LeftLayoutTemplate}" TargetType="{x:Type dx:DXTabControl}">
        <Grid>
            <!--BEGIN WPF-->
            <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
            <!--END WPF-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Margin="2,0,0,0" x:Name="tabHeadersPanel">
                <!--BEGIN WPF-->
                <KeyboardNavigation.TabIndex>1</KeyboardNavigation.TabIndex>
                <KeyboardNavigation.DirectionalNavigation>Cycle</KeyboardNavigation.DirectionalNavigation>
                <KeyboardNavigation.TabNavigation>Once</KeyboardNavigation.TabNavigation>
                <Panel.ZIndex>1</Panel.ZIndex>
                <!--END WPF-->
                <!--ONLY SL<Canvas.ZIndex>1</Canvas.ZIndex>ONLY SL-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <dx:ClippedContainer Grid.Row="3" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Style="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ClippedContainerLeftLayoutStyle}}">
                    <dx:TabPanelContainer x:Name="panelContainer" Style="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=PanelContainerLeftLayoutStyle}}">
                        <dx:TabPanelContainer.Resources>
                            <Storyboard x:Key="ScrollStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ItemsPanelTranslate" Storyboard.TargetProperty="Y" Duration="0:0:0.4" To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="0" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </dx:TabPanelContainer.Resources>
                        <ItemsPresenter>
                            <ItemsPresenter.RenderTransform>
                                <TranslateTransform x:Name="ItemsPanelTranslate" />
                            </ItemsPresenter.RenderTransform>
                        </ItemsPresenter>
                    </dx:TabPanelContainer>
                </dx:ClippedContainer>
                <dx:TabControlScrollButton x:Name="PrevButton" Grid.Row="1" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=PrevButtonStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForVerticalLayouts}}">
                    <dx:TabControlScrollButton.RenderTransform>
                        <RotateTransform CenterX="8" CenterY="8" Angle="90" />
                    </dx:TabControlScrollButton.RenderTransform>
                </dx:TabControlScrollButton>
                <dx:TabControlScrollButton x:Name="NextButton" Grid.Row="2" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=NextButtonStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForVerticalLayouts}}">
                    <dx:TabControlScrollButton.RenderTransform>
                        <RotateTransform CenterX="8" CenterY="8" Angle="90" />
                    </dx:TabControlScrollButton.RenderTransform>
                </dx:TabControlScrollButton>
                <dx:HeaderMenu Grid.Row="0" x:Name="HeaderMenu" IsTabStop="False" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=HeaderMenuStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForVerticalLayouts}}">
                    <dx:HeaderMenu.RenderTransform>
                        <RotateTransform CenterX="8" CenterY="8" Angle="-90" />
                    </dx:HeaderMenu.RenderTransform>
                </dx:HeaderMenu>
            </Grid>
            <Grid Grid.Column="1" Name="PART_ContentHost">
                <dx:DXContentPresenter ContentTemplate="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=LeftBackgroundTemplate}}" IsTabStop="False">
                    <!--ONLY SL<dx:ThemeManager.ApplyApplicationTheme>True</dx:ThemeManager.ApplyApplicationTheme>ONLY SL-->
                </dx:DXContentPresenter>
                <Grid Margin="{TemplateBinding Padding}">
                    <dx:DXContentPresenter x:Name="contentPresenter" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Content="{TemplateBinding SelectedItemContent}" ContentTemplate="{TemplateBinding SelectedItemContentTemplate}">
                        <!--BEGIN WPF-->
                        <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
                        <KeyboardNavigation.DirectionalNavigation>Contained</KeyboardNavigation.DirectionalNavigation>
                        <KeyboardNavigation.TabIndex>2</KeyboardNavigation.TabIndex>
                        <!--END WPF-->
                        <!--ONLY SL<dx:ThemeManager.ApplyApplicationTheme>True</dx:ThemeManager.ApplyApplicationTheme>ONLY SL-->
                    </dx:DXContentPresenter>
                    <dx:TabControlFastRenderPanel x:Name="fastRenderPanel" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Visibility="Collapsed">
                        <!--BEGIN WPF-->
                        <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
                        <KeyboardNavigation.DirectionalNavigation>Contained</KeyboardNavigation.DirectionalNavigation>
                        <KeyboardNavigation.TabIndex>2</KeyboardNavigation.TabIndex>
                        <!--END WPF-->
                    </dx:TabControlFastRenderPanel>
                </Grid>
            </Grid>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:DXTabControlThemeKey ResourceKey=RightLayoutTemplate}" TargetType="{x:Type dx:DXTabControl}">
        <Grid>
            <!--BEGIN WPF-->
            <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
            <!--END WPF-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="1" Margin="0,0,2,0" x:Name="tabHeadersPanel">
                <!--BEGIN WPF-->
                <KeyboardNavigation.TabIndex>1</KeyboardNavigation.TabIndex>
                <KeyboardNavigation.DirectionalNavigation>Cycle</KeyboardNavigation.DirectionalNavigation>
                <KeyboardNavigation.TabNavigation>Once</KeyboardNavigation.TabNavigation>
                <Panel.ZIndex>1</Panel.ZIndex>
                <!--END WPF-->
                <!--ONLY SL<Canvas.ZIndex>1</Canvas.ZIndex>ONLY SL-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <dx:ClippedContainer Grid.Row="3" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Style="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ClippedContainerRightLayoutStyle}}">
                    <dx:TabPanelContainer x:Name="panelContainer" Style="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=PanelContainerRightLayoutStyle}}">
                        <dx:TabPanelContainer.Resources>
                            <Storyboard x:Key="ScrollStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ItemsPanelTranslate" Storyboard.TargetProperty="Y" Duration="0:0:0.4" To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut" Exponent="0" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </dx:TabPanelContainer.Resources>
                        <ItemsPresenter>
                            <ItemsPresenter.RenderTransform>
                                <TranslateTransform x:Name="ItemsPanelTranslate" />
                            </ItemsPresenter.RenderTransform>
                        </ItemsPresenter>
                    </dx:TabPanelContainer>
                </dx:ClippedContainer>
                <dx:TabControlScrollButton x:Name="PrevButton" Grid.Row="1" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=PrevButtonStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForVerticalLayouts}}">
                    <dx:TabControlScrollButton.RenderTransform>
                        <RotateTransform CenterX="8" CenterY="8" Angle="90" />
                    </dx:TabControlScrollButton.RenderTransform>
                </dx:TabControlScrollButton>
                <dx:TabControlScrollButton x:Name="NextButton" Grid.Row="2" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=NextButtonStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForVerticalLayouts}}">
                    <dx:TabControlScrollButton.RenderTransform>
                        <RotateTransform CenterX="8" CenterY="8" Angle="90" />
                    </dx:TabControlScrollButton.RenderTransform>
                </dx:TabControlScrollButton>
                <dx:HeaderMenu Grid.Row="0" x:Name="HeaderMenu" IsTabStop="False" Style="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=HeaderMenuStyle}}" Margin="{DynamicResource {dxt:DXTabControlInternalThemeKey ResourceKey=ComponentsSpaceForVerticalLayouts}}">
                    <dx:HeaderMenu.RenderTransform>
                        <RotateTransform CenterX="8" CenterY="8" Angle="-90" />
                    </dx:HeaderMenu.RenderTransform>
                </dx:HeaderMenu>
            </Grid>
            <Grid Grid.Column="0" Name="PART_ContentHost">
                <dx:DXContentPresenter ContentTemplate="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=RightBackgroundTemplate}}" IsTabStop="False">
                    <!--ONLY SL<dx:ThemeManager.ApplyApplicationTheme>True</dx:ThemeManager.ApplyApplicationTheme>ONLY SL-->
                </dx:DXContentPresenter>
                <Grid Margin="{TemplateBinding Padding}">
                    <dx:DXContentPresenter x:Name="contentPresenter" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Content="{TemplateBinding SelectedItemContent}" ContentTemplate="{TemplateBinding SelectedItemContentTemplate}">
                        <!--BEGIN WPF-->
                        <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
                        <KeyboardNavigation.DirectionalNavigation>Contained</KeyboardNavigation.DirectionalNavigation>
                        <KeyboardNavigation.TabIndex>2</KeyboardNavigation.TabIndex>
                        <!--END WPF-->
                        <!--ONLY SL<dx:ThemeManager.ApplyApplicationTheme>True</dx:ThemeManager.ApplyApplicationTheme>ONLY SL-->
                    </dx:DXContentPresenter>
                    <dx:TabControlFastRenderPanel x:Name="fastRenderPanel" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Visibility="Collapsed">
                        <!--BEGIN WPF-->
                        <KeyboardNavigation.TabNavigation>Local</KeyboardNavigation.TabNavigation>
                        <KeyboardNavigation.DirectionalNavigation>Contained</KeyboardNavigation.DirectionalNavigation>
                        <KeyboardNavigation.TabIndex>2</KeyboardNavigation.TabIndex>
                        <!--END WPF-->
                    </dx:TabControlFastRenderPanel>
                </Grid>
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style x:Key="TabControlDefaultStyle" TargetType="{x:Type dx:DXTabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=ForegroundBrush}}" />
        <Setter Property="LayoutTopTemplate" Value="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=TopLayoutTemplate}}" />
        <Setter Property="LayoutBottomTemplate" Value="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=BottomLayoutTemplate}}" />
        <Setter Property="LayoutLeftTemplate" Value="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=LeftLayoutTemplate}}" />
        <Setter Property="LayoutRightTemplate" Value="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=RightLayoutTemplate}}" />
        <Setter Property="Template" Value="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=TopLayoutTemplate}}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dx:TabPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="{DynamicResource {dxt:DXTabControlThemeKey ResourceKey=Padding}}" />
        <!--ONLY SL<Setter Property="Foreground" Value="{DynamicResource {dxt:DXTabItemThemeKey ResourceKey=ForegroundBrush}}"/>ONLY SL-->        
        <Setter Property="IsTabStop" Value="False" />
    </Style>
</ResourceDictionary>