<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:help="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core">
  <dxcore_unique_xmlns:BoolToVisibilityInverseConverter x:Key="inverseBoolToVisibilityConverter" />
  <dxcore_unique_xmlns:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
  <dxcore_unique_xmlns:EmbeddedResourceImageConverter x:Key="EmbeddedResourceImageConverter" />
  <SolidColorBrush x:Key="ImageEditToolSeparatorBackground" Color="#FFDADADA" />
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=Template}" TargetType="{x:Type dxe:ImageEdit}">
    <!--BEGIN WPF-->
    <ContentControl Template="{TemplateBinding BorderTemplate}" x:Name="Border" Focusable="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;10;10">
      <DockPanel LastChildFill="True" SnapsToDevicePixels="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;11;14">
        <dxep:ErrorControl x:Name="PART_ErrorPresenter" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;12;18" />
        <dxep:EditorControl DockPanel.Dock="Left" x:Name="PART_Content" Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).ActualEditorControlTemplate, RelativeSource={RelativeSource Self}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;13;18" />
      </DockPanel>
    </ContentControl>
    <!--END WPF-->
    <!--ONLY SL
        <Grid x:Name="PART_Root">
            <Grid.Resources>
                <ControlTemplate x:Key="EmptyBorderTemplate" TargetType="ContentControl">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="EnabledStates">
                    <VisualState x:Name="Enabled"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.35"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ReadOnlyStates">
                    <VisualState x:Name="Editable"/>
                    <VisualState x:Name="ReadOnly"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ContentControl Background="{TemplateBinding Background}" Template="{TemplateBinding ActualBorderTemplate}" IsTabStop="False" x:Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <dxe:ErrorControl x:Name="PART_ErrorPresenter" Grid.Column="0"/>
                    <dxe:EditorControl x:Name="PART_Content" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}" Template="{TemplateBinding ActualEditorControlTemplate}"/>
                </Grid>
            </ContentControl>
        </Grid>
        ONLY SL-->
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=EmptyBorderTemplate}" TargetType="{x:Type ContentControl}">
    <ContentPresenter dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;57;10" />
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=MenuPopupTemplate}" TargetType="{x:Type ContentControl}">
    <Grid Height="24" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;61;10">
      <Border Background="#BF000000" Opacity="0.75" CornerRadius="12" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;62;14" />
      <ContentPresenter Margin="12,0,12,0" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;63;14" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=MenuTemplate}" TargetType="{x:Type ContentControl}">
    <StackPanel x:Name="PART_MenuContent" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;68;10">
      <!--BEGIN WPF-->
      <dxep:ImageEditCutToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;70;14" />
      <dxep:ImageEditCopyToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;71;14" />
      <dxep:ImageEditPasteToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;72;14" />
      <dxep:ImageEditClearToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;73;14" />
      <dxep:ImageEditToolSeparator dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;74;14" />
      <dxep:ImageEditLoadToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;75;14" />
      <dxep:ImageEditSaveToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;76;14" />
      <!--END WPF-->
      <!--ONLY SL
                <dxe:ImageEditClearToolButton />
                <dxe:ImageEditLoadToolButton />
                ONLY SL-->
    </StackPanel>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:PopupImageEditThemeKey ResourceKey=MenuTemplate}" TargetType="{x:Type ContentControl}">
    <StackPanel x:Name="PART_MenuContent" Orientation="Horizontal" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;86;10">
      <!--BEGIN WPF-->
      <dxep:ImageEditCutToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;88;14" />
      <dxep:ImageEditCopyToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;89;14" />
      <dxep:ImageEditPasteToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;90;14" />
      <dxep:ImageEditClearToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;91;14" />
      <dxep:ImageEditToolSeparator dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;92;14" />
      <dxep:ImageEditLoadToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;93;14" />
      <dxep:ImageEditSaveToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;94;14" />
      <!--END WPF-->
      <!--ONLY SL
            <dxe:ImageEditClearToolButton />
            <dxe:ImageEditLoadToolButton />
            ONLY SL-->
      <dxep:ImageEditToolSeparator dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;100;14" />
      <dxep:PopupImageEditOKToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;101;14" />
      <dxep:PopupImageEditCancelToolButton dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;102;14" />
    </StackPanel>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:PopupImageEditThemeKey ResourceKey=PopupContentTemplate}" TargetType="{x:Type ContentControl}">
    <Grid SnapsToDevicePixels="True" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;107;10">
      <dxep:ImageEdit x:Name="PART_PopupContent" ShowBorder="False" Stretch="{Binding Path=Tag.Stretch, RelativeSource={RelativeSource TemplatedParent}}" Effect="{Binding Path=Tag.ImageEffect, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{Binding Path=Tag.Foreground, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;108;14" />
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=EditTemplate}">
    <Grid x:Name="PART_Container" Background="Transparent" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;113;10">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Image x:Name="PART_Editor" Source="{Binding Path=(dxe:BaseEdit.OwnerEdit).Source, RelativeSource={RelativeSource TemplatedParent}}" Stretch="{Binding Path=(dxe:BaseEdit.OwnerEdit).Stretch, RelativeSource={RelativeSource TemplatedParent}}" Effect="{Binding Path=(dxe:BaseEdit.OwnerEdit).ImageEffect, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;118;14" />
      <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).EmptyContentTemplate, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).HasImage, Converter={StaticResource inverseBoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;119;14" />
      <Border Background="#FF404040" Grid.Row="1" Padding="8,2,0,2" x:Name="PART_InplaceMenu" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).InplaceMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;120;14">
        <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;121;18" />
      </Border>
    </Grid>
  </ControlTemplate>
  <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=EditInplaceTemplate}">
    <Grid x:Name="PART_Container" Background="Transparent" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;128;10">
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <Image Name="PART_Editor" Source="{Binding Path=(dxe:BaseEdit.OwnerEdit).Source, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Stretch="{Binding Path=(dxe:BaseEdit.OwnerEdit).Stretch, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;133;14" />
      <Border Background="#FF404040" Grid.Row="1" Padding="8,2,0,2" x:Name="PART_InplaceMenu" Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).InplaceMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;134;14">
        <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;135;18" />
      </Border>
    </Grid>
  </ControlTemplate>
  <!--BEGIN WPF-->
  <Style x:Key="{dxet:PopupImageEditThemeKey ResourceKey=SizeGripStyle}" TargetType="{x:Type dxe:PopupSizeGrip}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border Background="Transparent" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;144;22" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate TargetType="{x:Type dxep:PopupContentContainer}" x:Key="{dxet:PopupImageEditThemeKey ResourceKey=PopupContentContainerTemplate}">
    <Grid dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;151;10">
      <ContentPresenter dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;152;14" />
      <Grid x:Name="PART_Footer" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;153;14">
        <dxep:PopupSizeGrip Width="4" Height="4" x:Name="PART_SizeGrip" Style="{DynamicResource {dxet:PopupImageEditThemeKey ResourceKey=SizeGripStyle}}" HorizontalAlignment="Right" VerticalAlignment="Bottom" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\ImageEdit.xaml;154;18" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=DropOpposite, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxe:PopupBaseEdit}}}" Value="False" />
          <Condition Binding="{Binding Path=FlowDirection, RelativeSource={RelativeSource Self}}" Value="LeftToRight" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="PART_SizeGrip" Property="Cursor" Value="{x:Static Cursors.SizeNWSE}" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=DropOpposite, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxe:PopupBaseEdit}}}" Value="True" />
          <Condition Binding="{Binding Path=FlowDirection, RelativeSource={RelativeSource Self}}" Value="LeftToRight" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="PART_SizeGrip" Property="Cursor" Value="{x:Static Cursors.SizeNESW}" />
        <Setter TargetName="PART_SizeGrip" Property="VerticalAlignment" Value="Top" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=DropOpposite, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxe:PopupBaseEdit}}}" Value="False" />
          <Condition Binding="{Binding Path=FlowDirection, RelativeSource={RelativeSource Self}}" Value="RightToLeft" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="PART_SizeGrip" Property="Cursor" Value="{x:Static Cursors.SizeNESW}" />
      </MultiDataTrigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=DropOpposite, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type dxe:PopupBaseEdit}}}" Value="True" />
          <Condition Binding="{Binding Path=FlowDirection, RelativeSource={RelativeSource Self}}" Value="RightToLeft" />
        </MultiDataTrigger.Conditions>
        <Setter TargetName="PART_SizeGrip" Property="Cursor" Value="{x:Static Cursors.SizeNWSE}" />
        <Setter TargetName="PART_SizeGrip" Property="VerticalAlignment" Value="Top" />
      </MultiDataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!--END WPF-->
  <!--ONLY SL
        <ControlTemplate x:Key="ImageEditShowEmptyIconTemplate">
        <Grid x:Name="PART_Editor" Background="Transparent" Margin="{Binding Padding}">
            <Image x:Name="PART_Icon" Stretch="None" Source="{Binding Source=DevExpress.Xpf.Core.Editors.Images.ImageEdit.inactive.png, Converter={StaticResource EmbeddedResourceImageConverter}}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ImageEditShowIconTemplate">
        <Grid x:Name="PART_Editor" Background="Transparent" Margin="{Binding Padding}">
            <Image x:Name="PART_Icon" Stretch="None" Source="{Binding Source=DevExpress.Xpf.Core.Editors.Images.ImageEdit.active.png, Converter={StaticResource EmbeddedResourceImageConverter}}" />
        </Grid>
    </ControlTemplate>
    
    <Style TargetType="dxe:ImageEditToolSeparator">
        <Style.Setters>
            <Setter Property="Margin" Value="6,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Fill="{StaticResource ImageEditToolSeparatorBackground}" Width="1" Height="18" Opacity="0.25"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style TargetType="dxe:ImageEditToolButton">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="dxe:ImageEditToolButton">
                        <Grid>
                            <Border Name="border" Background="{TemplateBinding Background}" >
                                <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                                    <Image Source="{TemplateBinding ImageSource}" Stretch="None" />
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </StackPanel>
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="border" Storyboard.TargetProperty="Opacity" To=".3"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    ONLY SL-->
</ResourceDictionary>