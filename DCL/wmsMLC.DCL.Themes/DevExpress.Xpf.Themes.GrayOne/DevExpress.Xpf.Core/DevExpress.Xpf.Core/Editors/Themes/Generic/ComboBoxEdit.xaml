<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxepc="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <!--BEGIN TOSLONLY REPLACE ' BasedOn="ListBox"''-->
    <Style x:Key="{dxet:EditorListBoxThemeKey ResourceKey=Style}" TargetType="{x:Type dxep:EditorListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Padding" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=Template}}" />
        <Setter Property="Background" Value="{DynamicResource {dxt:BrushesThemeKey ResourceKey=EditorPopupListBoxBackground}}" />
        <!--BEGIN WPF-->
        <Setter Property="TextSearch.TextPath" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(TextSearch.TextPath), RelativeSource={RelativeSource Self}}" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(ScrollViewer.CanContentScroll), RelativeSource={RelativeSource Self}}" />
        <!--END WPF-->
    </Style>
    <Style x:Key="{dxet:EditorListBoxThemeKey ResourceKey=PopupStyle}" TargetType="{x:Type dxep:EditorListBox}" BasedOn="{StaticResource {dxet:EditorListBoxThemeKey ResourceKey=Style}}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    </Style>
    <!--END TOSLONLY REPLACE ' BasedOn="ListBox"''-->
    <ControlTemplate x:Key="{dxet:ComboBoxEditThemeKey ResourceKey=PopupContentTemplate}" TargetType="{x:Type ContentControl}">
        <Grid Width="Auto" Height="Auto" SnapsToDevicePixels="True">
            <Grid.Resources>
                <dxeh:PopupListBoxDisplayMemberPathConverter x:Key="DisplayMemberPathConverter" />
            </Grid.Resources>
            <dxepc:PopupListBox x:Name="PART_Content" dx:FocusHelper2.Focusable="False" DisplayMemberPath="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DisplayMemberPathConverter}}" ItemTemplate="{Binding Path=Tag.ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" ItemsPanel="{Binding Path=Tag.ItemsPanel, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="{Binding Path=Tag.HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" VerticalContentAlignment="{Binding Path=Tag.VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{x:Null}" BorderThickness="0,0,0,0" Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=PopupStyle}}" FocusVisualStyle="{x:Null}">
                <!--ONLY SL
                <dxe:BaseEdit.OwnerEdit>
                    <Binding/>
                </dxe:BaseEdit.OwnerEdit>
                ONLY SL-->
                <!--BEGIN WPF-->
                <dxepc:PopupListBox.ItemTemplateSelector>
                    <Binding Path="Tag.ItemTemplateSelector" RelativeSource="{RelativeSource TemplatedParent}" />
                </dxepc:PopupListBox.ItemTemplateSelector>
                <!--END WPF-->
            </dxepc:PopupListBox>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxet:ComboBoxEditThemeKey ResourceKey=SelectedItemTemplate}">
        <ContentPresenter x:Name="PART_Editor" Content="{Binding Path=(dxe:BaseEdit.OwnerEdit).SelectedItemValue, RelativeSource={RelativeSource Self}}" ContentTemplate="{Binding Path=(dxe:BaseEdit.OwnerEdit).ItemTemplate, RelativeSource={RelativeSource Self}}" HorizontalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment, RelativeSource={RelativeSource Self}}" VerticalAlignment="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment, RelativeSource={RelativeSource Self}}" Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource Self}}" IsHitTestVisible="False" MinHeight="20">
            <!--BEGIN WPF-->
            <ContentPresenter.ContentTemplateSelector>
                <Binding Path="(dxe:BaseEdit.OwnerEdit).ItemTemplateSelector" RelativeSource="{RelativeSource Self}" />
            </ContentPresenter.ContentTemplateSelector>
            <!--END WPF-->
        </ContentPresenter>
    </ControlTemplate>
    <dx:ListOfObjectToIEnumerableOfStringConverter x:Key="listConverter" />
    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
    <dx:BoolInverseConverter x:Key="boolInverseConverter" />
    <dx:VisibilityToBoolInverseConverter x:Key="visibilityToBoolInverseConverter" />
    <dx:StringToVisibilityConverter x:Key="stringToVisibilityConverter" />
    <!--BEGIN WPF-->
    <Style x:Key="{dxet:SearchControlThemeKey ResourceKey=FindButtonStyle}" TargetType="{x:Type Button}">
    <!--END WPF-->
    <!--ONLY SL
    <Style TargetType="{x:Type Button}" x:Key="{dxet:SearchControlThemeKey ResourceKey=FindButtonStyle}" dx:ThemeManager.SameBasedOnType="True" dx:ThemeManager.InheritedStyleSource="{StaticResource CoreDictionary}">
    ONLY SL-->
        <Setter Property="Margin" Value="0,0,6,0" />
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Content" Value="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=LookUpFind, Converter={StaticResource EditorStringIdConverter}}" />
    </Style>
    <!--BEGIN WPF-->
    <Style x:Key="{dxet:SearchControlThemeKey ResourceKey=CloseButtonStyle}" TargetType="{x:Type Button}">
    <!--END WPF-->
    <!--ONLY SL
    <Style TargetType="{x:Type Button}" x:Key="{dxet:SearchControlThemeKey ResourceKey=CloseButtonStyle}" dx:ThemeManager.SameBasedOnType="True" dx:ThemeManager.InheritedStyleSource="{StaticResource CoreDictionary}">
    ONLY SL-->
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Content" Value="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=LookUpClose, Converter={StaticResource EditorStringIdConverter}}" />
    </Style>
    <!--<Style x:Key="{dxet:SearchControlThemeKey ResourceKey=PanelStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=PanelTemplate}}" />
    </Style>-->
    <dx:BoolToObjectConverter x:Key="NullValueButtonPlacementConverter">
        <dx:BoolToObjectConverter.TrueValue>EditBox</dx:BoolToObjectConverter.TrueValue>
        <dx:BoolToObjectConverter.FalseValue>None</dx:BoolToObjectConverter.FalseValue>
    </dx:BoolToObjectConverter>
    <dx:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <ControlTemplate x:Key="{dxet:SearchControlThemeKey ResourceKey=Template}">
        <ContentControl dx:FocusHelper2.Focusable="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dxepc:ComboBoxEdit MinHeight="22" ImmediatePopup="{Binding Path= SearchControlPropertyProvider.ActualImmediateMRUPopup, RelativeSource={RelativeSource TemplatedParent}}" x:Name="editor" AllowDefaultButton="False" NullText="{Binding Path=IsTabStop, RelativeSource={RelativeSource Self}, ConverterParameter=LookUpSearch, Converter={StaticResource EditorStringIdConverter}}" ShowNullText="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolInverseConverter}}" dxeh:MVVMFocusBehavior.IsFocused="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Path=MRU, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" ValidateOnEnterKeyPressed="True" EditValuePostDelay="{Binding Path=SearchTextPostDelay, RelativeSource={RelativeSource TemplatedParent}}" EditValuePostMode="{Binding Path=SearchControlPropertyProvider.ActualPostMode, RelativeSource={RelativeSource TemplatedParent}}" EditValue="{Binding Path=SearchText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <!--<dxe:ComboBoxEdit.StyleSettings>
                        <dxe:SearchControlStyleSettings/>
                    </dxe:ComboBoxEdit.StyleSettings>-->
                    <dxepc:ComboBoxEdit.Buttons>
                        <dxepc:ButtonInfo GlyphKind="Custom" x:Name="buttonClear" Command="{Binding Path=SetNullValueCommand, ElementName=editor}" Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowClearButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                            <dxepc:ButtonInfo.Template>
                                <DataTemplate>
                                    <dxepc:ButtonClose Command="{Binding Command}" Visibility="{Binding Visibility}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,0" />
                                </DataTemplate>
                            </dxepc:ButtonInfo.Template>
                        </dxepc:ButtonInfo>
                        <dxepc:ButtonInfo GlyphKind="DropDown" Command="{Binding Path=OpenPopupCommand, ElementName=editor}" Visibility="{Binding Path=ShowMRUButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}" />
                    </dxepc:ComboBoxEdit.Buttons>
                </dxepc:ComboBoxEdit>
                <Button Grid.Column="1" Margin="4,0,0,0" MinWidth="55" Command="{Binding Path=SearchControlPropertyProvider.FindCommand, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding Path=FilterCriteria, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=SearchControlPropertyProvider.ActualShowFindButton, Converter={StaticResource boolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=FindButtonStyle}}" />
                <Button Grid.Column="2" Margin="4,0,0,0" MinWidth="55" Command="{Binding Path=SearchControlPropertyProvider.CloseCommandInternal, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource {dxet:SearchControlThemeKey ResourceKey=CloseButtonStyle}}" Visibility="{Binding Path=ShowCloseButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </ContentControl>
    </ControlTemplate>
</ResourceDictionary>