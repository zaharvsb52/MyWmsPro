<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal">

    <!--BEGIN WPF-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.GrayOne.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/PopupListBox.xaml" />
        <ResourceDictionary Source="/DevExpress.Xpf.Themes.GrayOne.v15.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/GrayOne/Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--END WPF-->

    <ControlTemplate x:Key="{dxet:EditorListBoxThemeKey ResourceKey=ItemTemplate}" TargetType="{x:Type dxe:ListBoxEditItem}">
        <Grid x:Name="Root">
            <Grid.Resources>
                <DataTemplate x:Key="HoverTemplate">
                    <Border Background="{StaticResource ListBoxEditItem.HoverSelection.Border1}" CornerRadius="2" Padding="1">
                        <Border Background="{StaticResource ListBoxEditItem.HoverSelection.Border3}" BorderBrush="{StaticResource ListBoxEditItem.HoverSelection.Border2}" BorderThickness="1" CornerRadius="1" Padding="1" />
                    </Border>
                </DataTemplate>
                <DataTemplate x:Key="SelectedTemplate">
                    <Border Background="{StaticResource ListBoxEditItem.Selection.Border1}" CornerRadius="2" Padding="1">
                        <Border Background="{StaticResource ListBoxEditItem.Selection.Border3}" BorderBrush="{StaticResource ListBoxEditItem.Selection.Border2}" BorderThickness="1" CornerRadius="1" Padding="1" />
                    </Border>
                </DataTemplate>
                <DataTemplate x:Key="InactiveSelectedTemplate">
                    <Border Background="{StaticResource ListBoxEditItem.InactiveSelection.Border1}" CornerRadius="2" Padding="1">
                        <Border Background="{StaticResource ListBoxEditItem.InactiveSelection.Border3}" BorderBrush="{StaticResource ListBoxEditItem.InactiveSelection.Border2}" BorderThickness="1" CornerRadius="1" Padding="1" />
                    </Border>
                </DataTemplate>
                <!--ONLY SL
                <SolidColorBrush x:Key="BlackBrush" Color="#FF201F35"/>
                <dx:BoolToObjectConverter x:Key="BoolToObjectConverter" FalseValue="0" TrueValue="1"/>
                ONLY SL-->
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" Duration="0" To="0.35" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <!--ONLY SL
                            <DoubleAnimation Storyboard.TargetName="hover1" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentContainer" Storyboard.TargetProperty="Foreground" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BlackBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            ONLY SL-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="SelectedUnfocused">
                        <Storyboard>
                            <!--ONLY SL
                            <DoubleAnimation Storyboard.TargetName="selected" Storyboard.TargetProperty="Opacity" Duration="0" To=".5"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentContainer" Storyboard.TargetProperty="Foreground" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BlackBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            ONLY SL-->
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <!--ONLY SL
                            <DoubleAnimation Storyboard.TargetName="focused" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentContainer" Storyboard.TargetProperty="Foreground" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BlackBrush}"/>
                            </ObjectAnimationUsingKeyFrames>
                            ONLY SL-->
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused" />
                </VisualStateGroup>
                <!--ONLY SL
                <VisualStateGroup x:Name="MouseHighlightedStates">
                    <VisualState x:Name="Highlighted">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="hover2" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unhighlighted"/>
                </VisualStateGroup>
                ONLY SL-->
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Rectangle x:Name="FocusVisual" StrokeThickness="1" Stroke="#FF000000" StrokeDashArray="1 2" SnapsToDevicePixels="True" Opacity="0" />
                <!--BEGIN WPF-->
                <ContentPresenter x:Name="InactiveSelectedState" ContentTemplate="{StaticResource InactiveSelectedTemplate}" Opacity="0" />
                <ContentPresenter x:Name="HoverState" ContentTemplate="{StaticResource HoverTemplate}" Opacity="0" />
                <ContentPresenter x:Name="SelectedState" ContentTemplate="{StaticResource SelectedTemplate}" Opacity="0" />
                <ContentPresenter x:Name="FocusedState" ContentTemplate="{StaticResource SelectedTemplate}" Opacity="0" />
                <!--END WPF-->
                <!--ONLY SL
                <ContentPresenter x:Name="hover2" ContentTemplate="{StaticResource HoverTemplate}" Opacity="0"/>
                <ContentPresenter x:Name="hover1" ContentTemplate="{StaticResource SelectedTemplate}" Opacity="0"/>
                <ContentPresenter x:Name="selected" ContentTemplate="{StaticResource SelectedTemplate}" Opacity="0"/>
                <ContentPresenter x:Name="focused" ContentTemplate="{StaticResource SelectedTemplate}" Opacity="0"/>
                ONLY SL-->
            </Grid>
            <Border Padding="3,2,3,2" SnapsToDevicePixels="True">
                <!--ONLY SL
                <dx:ContentContainer x:Name="contentContainer">
                ONLY SL-->
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <!--ONLY SL
                </dx:ContentContainer>
                ONLY SL-->
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="SelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                <Setter TargetName="FocusVisual" Property="Opacity" Value="0" />
            </Trigger>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter TargetName="SelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="HoverState" Property="Opacity" Value="1" />
                <Setter TargetName="FocusVisual" Property="Opacity" Value="0" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="SelectedState" Property="Opacity" Value="0" />
                <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                <Setter TargetName="FocusVisual" Property="Opacity" Value="1" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True" />
                    <Condition Property="Selector.IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="SelectedState" Property="Opacity" Value="1" />
                <Setter TargetName="HoverState" Property="Opacity" Value="0" />
                <Setter TargetName="FocusVisual" Property="Opacity" Value="0" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
