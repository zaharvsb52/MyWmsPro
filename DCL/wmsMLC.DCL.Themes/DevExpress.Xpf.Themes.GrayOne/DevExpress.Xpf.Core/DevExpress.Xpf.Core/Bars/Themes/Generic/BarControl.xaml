<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxbc="http://schemas.devexpress.com/winfx/2008/xaml/bars/internal" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">   
    
    <ItemsPanelTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=ItemsPanelTemplate}">
        <dxb:BarClientPanel IsItemsHost="True" Margin="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ClientPanelPadding}}" MinHeight="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ClientPanelMinHeight}}" Background="Transparent" />
    </ItemsPanelTemplate>
    
    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=ContentExpanderStyle}" TargetType="{x:Type dx:DXExpander}">
        <Setter Property="HorizontalExpand" Value="FromLeftToRight" />
        <Setter Property="VerticalExpand" Value="None" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <!--ONLY SL
        <Setter Property="dx:FrameworkElementHelper.IsClipped" Value="True"/>
        ONLY SL-->
    </Style>
    
    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=DragWidgetStyle}" TargetType="{x:Type dxb:DragWidget}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=DragWidgetTemplate}}" />
        <!--BEGIN WPF-->
        <Setter Property="Cursor" Value="SizeAll" />
        <!--END WPF-->
        <!--ONLY SL
        <Setter Property="dx:FrameworkElementHelper.IsClipped" Value="True"/>
        ONLY SL-->
        <!--<Setter Property="dx:CustomCursorController.Cursor" Value="{DynamicResource SizeAllCursor}"/>-->
    </Style>

    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonStyle}" TargetType="{x:Type dxb:BarQuickCustomizationButton}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonTemplate}}" />
    </Style>

    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonInMainMenuStyle}" TargetType="{x:Type dxb:BarQuickCustomizationButton}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonInMainMenuTemplate}}" />
    </Style>

    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=ThumbStyle}" TargetType="{x:Type Thumb}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ThumbTemplate}}" />
    </Style>

    <dxc:BoolToVisibilityConverter x:Key="MyConverter" />

    <ControlTemplate x:Key="{dxbt:BarControlThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type dxb:BarControl}">
        <ContentControl x:Name="PART_Bar" Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=BarStyle}}" Template="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=BarTemplate}}" Focusable="False" IsTabStop="False">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dxb:DragWidget x:Name="PART_DragWidget" Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=DragWidgetStyle}}" Grid.Column="0" />
                <ContentControl x:Name="PART_Content" Grid.Column="1" Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=BarContentStyle}}" Template="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=BarContentTemplate}}" Focusable="False" IsTabStop="False">
                    <dxc:DXExpander x:Name="PART_ContentExpander" IsExpanded="True" Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ContentExpanderStyle}}" Focusable="False">
                        <dxc:CompatibilityAdornerContainer x:Name="PART_Adorner">
                            <ItemsPresenter x:Name="PART_ItemsPresenter" />
                        </dxc:CompatibilityAdornerContainer>
                    </dxc:DXExpander>
                </ContentControl>
                <dxb:BarQuickCustomizationButton x:Name="PART_QuickCustomizationButton" Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=QuickCustomizationButtonStyle}}" Grid.Column="2" Focusable="False" />

                <!--<Thumb x:Name="PART_Thumb" Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ThumbStyle}}" Visibility="{TemplateBinding ActualShowSizeGrip, Converter={StaticResource MyConverter}}" Grid.Column="3"/>-->
                <Thumb x:Name="PART_Thumb" Style="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=ThumbStyle}}" Grid.Column="3" />

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="BarControlState">
                        <VisualState x:Name="Bar" />
                        <VisualState x:Name="MainMenu" />
                        <VisualState x:Name="StatusBar" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </ContentControl>
    </ControlTemplate>

    <Style x:Key="{dxbt:BarControlThemeKey ResourceKey=DropIndicatorStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{DynamicResource {dxbt:BarControlThemeKey ResourceKey=DropIndicatorTemplate}}" />
    </Style>
</ResourceDictionary>