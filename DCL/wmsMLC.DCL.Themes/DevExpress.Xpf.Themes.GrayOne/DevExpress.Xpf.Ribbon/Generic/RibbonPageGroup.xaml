<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys" xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon" xmlns:dxrt="http://schemas.devexpress.com/winfx/2008/xaml/ribbon/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">

    <dxc:BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <dxc:BooleanToVisibilityConverter x:Key="invertBoolToVisibilityConverter" Invert="True" />
    
    <ItemsPanelTemplate x:Key="{dxrt:RibbonPageGroupThemeKey ResourceKey=PanelTemplate}">
        <dxr:RibbonPageGroupItemsPanel IsItemsHost="True" />
    </ItemsPanelTemplate>


    <Style x:Key="{dxrt:RibbonPageGroupThemeKey ResourceKey=PopupControlStyle}" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=PopupControlTemplate}}" />
    </Style>
    <ControlTemplate x:Key="{dxrt:RibbonPageGroupThemeKey ResourceKey=ControlTemplate}" TargetType="{x:Type dxr:RibbonPageGroupControl}">
        <Grid>
            <dxb:BarButtonItemLinkControl x:Name="PART_OriginButtonItemLinkControl" ContainerType="RibbonPageGroup" Content="Wg" Width="0" IsHitTestVisible="False" VerticalAlignment="Top" HorizontalAlignment="Left" />
            <!--ONLY SL<Border Background="Red" Opacity="0" /> ONLY SL-->
            <ContentControl x:Name="PART_Border" Template="{TemplateBinding ActualBorderTemplate}" Focusable="False" IsTabStop="False" DataContext="{Binding Path=PageGroup.Page.PageCategory.Color, RelativeSource={RelativeSource Mode=TemplatedParent}}" Visibility="{Binding Path=IsCollapsed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource invertBoolToVisibilityConverter}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ItemsPresenter x:Name="PART_ItemsPresenter" Grid.Row="0" Style="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=ContentStyle}}" />
                    <ContentControl x:Name="PART_Caption" Template="{TemplateBinding ActualCaptionBorderTemplate}" Grid.Row="1" Focusable="False" IsTabStop="False" DataContext="{Binding Path=PageGroup.Page.PageCategory.Color, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <dxb:SplitLayoutPanel Style="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=CaptionPanelStyle}}">
                            <dxb:SplitLayoutPanel.Content1>
                                <ContentControl Grid.Column="1" Grid.ColumnSpan="1" VerticalAlignment="Center" Style="{Binding Path=Ribbon.GroupCaptionTextStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" Content="{Binding Path=PageGroup.Caption, RelativeSource={RelativeSource Mode=TemplatedParent}}" HorizontalAlignment="Center" Focusable="False" IsTabStop="False" />
                            </dxb:SplitLayoutPanel.Content1>
                            <dxb:SplitLayoutPanel.Content2>
                                <dxr:RibbonCheckedBorderControl x:Name="PART_CaptionButton" Grid.Column="1" UseAppFocusValue="True" Style="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=CaptionButtonStyle}}" Template="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=CaptionButtonTemplate}}" Visibility="{Binding Path=PageGroup.ShowCaptionButton, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter = {StaticResource boolToVisibilityConverter}}" Focusable="False" IsTabStop="False" />
                            </dxb:SplitLayoutPanel.Content2>
                        </dxb:SplitLayoutPanel>
                    </ContentControl>
                </Grid>
            </ContentControl>

            <Grid x:Name="PART_PopupButton" Visibility="{Binding Path=IsCollapsed, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                <dxb:ItemBorderControl x:Name="PART_PopupButtonBorder" NormalTemplate="{TemplateBinding ActualPopupButtonBorderTemplate}" DataContext="{Binding Path=PageGroup.Page.PageCategory.Color, RelativeSource={RelativeSource Mode=TemplatedParent}}" HideBorderSide="None" />
                <dxc:Items2Panel Style="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=LayoutPanelStyle}}">
                    <dxc:Items2Panel.Content1>
                        <ContentControl Template="{TemplateBinding ActualPopupButtonGlyphBorderTemplate}" DataContext="{Binding Path=PageGroup.Page.PageCategory.Color, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Top">
                            <dxc:PixelSnapper VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Image Grid.Row="0" SnapsToDevicePixels="True" Source="{Binding Path=PageGroup.Glyph, RelativeSource={RelativeSource TemplatedParent}}" />
                            </dxc:PixelSnapper>
                        </ContentControl>
                    </dxc:Items2Panel.Content1>
                    <dxc:Items2Panel.Content2>
                        <dxb:TextSplitterControl Content="{Binding Path=PageGroup.Caption, RelativeSource={RelativeSource TemplatedParent}}" SplitMethod="BySpace" IsSelected="{TemplateBinding IsMouseOver}" Style="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=TextSplitterStyle}}" NormalArrowTemplate="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=NormalArrowTemplateInTextSplitter}}" SelectedArrowTemplate="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=SelectedArrowTemplateInTextSplitter}}" NormalTextStyle="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=NormalTextStyleInTextSplitter}}" SelectedTextStyle="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=SelectedTextStyleInTextSplitter}}" BottomSideArrowContainerStyle="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=BottomSideArrowContainerStyleInTextSplitter}}" RightSideArrowContainerStyle="{DynamicResource {dxrt:RibbonPageGroupThemeKey ResourceKey=RightSideArrowContainerStyleInTextSplitter}}" IsArrowVisible="True" />
                    </dxc:Items2Panel.Content2>
                </dxc:Items2Panel>
            </Grid>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>