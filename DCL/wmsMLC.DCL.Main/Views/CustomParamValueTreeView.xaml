<mv:DXPanelView x:Class="wmsMLC.DCL.Main.Views.CustomParamValueTreeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mv="clr-namespace:wmsMLC.DCL.Main.Views"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:gh="clr-namespace:wmsMLC.DCL.Main.Helpers"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:controls="clr-namespace:wmsMLC.DCL.Main.Views.Controls"
    xmlns:lex="clr-namespace:WPFLocalizeExtension.Extensions;assembly=WPFLocalizeExtension"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
    xmlns:help="clr-namespace:wmsMLC.DCL.Main.Helpers"
    xmlns:exp="clr-namespace:wmsMLC.DCL.Main.Views.ConditionExpressionEditor"
    help:Help.Keyword="Tree"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="300">

    <mv:DXPanelView.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="templates\BarManagerItemsTemplate.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <gh:ImageSelector x:Key="ImageSelector" />
            <BooleanToVisibilityConverter x:Key="BoolToVis" />

            <DataTemplate x:Key="customRowIndicatorTemplate">
                <ContentPresenter x:Name="iconPresenter" Content="{Binding}">
                    <ContentPresenter.ContentTemplate>
                        <DataTemplate>
                            <Grid />
                        </DataTemplate>
                    </ContentPresenter.ContentTemplate>
                </ContentPresenter>
                
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Focused">
                        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=FocusedIconTemplate, ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}}}" TargetName="iconPresenter" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Changed">
                        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ChangedIconTemplate, ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}}}" TargetName="iconPresenter" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IndicatorState}" Value="NewItemRow">
                        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=NewItemRowIconTemplate, ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}}}" TargetName="iconPresenter" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Editing">
                        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=EditingIconTemplate, ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}}}" TargetName="iconPresenter" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IndicatorState}" Value="Error">
                        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=ErrorIconTemplate}}" TargetName="iconPresenter" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IndicatorState}" Value="FocusedError">
                        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=FocusedErrorIconTemplate, ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}}}" TargetName="iconPresenter" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IndicatorState}" Value="AutoFilterRow">
                        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=AutoFilterRowIconTemplate, ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}}}" TargetName="iconPresenter" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=Row.IsDirty}" Value="True">
                        <Setter Property="ContentTemplate" Value="{DynamicResource {dxgt:RowIndicatorThemeKey ResourceKey=EditingIconTemplate, ThemeName={x:Static dx:ThemeManager.ApplicationThemeName}}}" TargetName="iconPresenter" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </ResourceDictionary>
    </mv:DXPanelView.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <mv:MenuView Grid.Row="0" Menu="{Binding Menu}"/>

        <dxdo:DockLayoutManager Grid.Row="1" x:Name="DockManager" FloatingMode="Desktop">
            <dxdo:LayoutGroup Orientation="Horizontal" DestroyOnClosingChildren="False">
                <dxdo:LayoutPanel Caption="{lex:LocExtension Key=wmsMLC.DCL.Resources:StringResources:Filtering}"
                    ItemWidth="0.35*"
                    AllowClose="False"
                    AllowHide="True"
                    Visibility="{Binding IsFilterVisible, Converter={StaticResource BoolToVis}}">
                    <mv:FilterView DataContext="{Binding Path=Filters}"/>
                </dxdo:LayoutPanel>
                
                <dxdo:LayoutPanel AllowClose="False" AllowHide="False" ShowCaption="False">
                    <controls:CustomTreeListControl x:Name="TlCpv"
                        TotalRowItemFilteredSymbolIsVisible="{Binding TotalRowItemFilteredSymbolIsVisible}"
                        TotalRowItemAdditionalInfo ="{Binding TotalRowItemAdditionalInfo}"
                        
                        AutoGenerateColumns="None"
                        ColumnsSource="{Binding Fields}"
                        SelectionMode="None"                                                    
                                                    
                        FilterString="{Binding FilterString, Mode=TwoWay}"
                        IsNeedRefresh="{Binding IsNeedRefresh, Mode=TwoWay}"
                        ItemsSource="{Binding Source, UpdateSourceTrigger=PropertyChanged, IsAsync=True}"

                        DefaultSorting="{Binding DefaultSortingField}"
                        ShowTotalRow="{Binding ShowTotalRow}"
                        
                        ItemsSourceChanged="OnItemsSourceChanged"
                                                    
                        dxg:GridSerializationOptions.AddNewColumns="False" 
                        dxg:GridSerializationOptions.RemoveOldColumns="False"
                        dx:DXSerializer.SerializationID="tree" 
                        dx:DXSerializer.StoreLayoutMode="All">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="FilterChanged">
                                <i:InvokeCommandAction Command="{Binding GridFilterChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <controls:CustomTreeListControl.View>
                            <controls:CustomTreeListView HorizontalScrollbarVisibility="Visible"
                                AutoWidth="False"
                                TreeDerivationMode="Selfreference"
                                KeyFieldName="{Binding KeyPropertyName}"
                                ParentFieldName="{Binding ParentIdPropertyName}"
                                SelectedRowsSource="{Binding SelectedItems}"

                                ItemsSourceErrorInfoShowMode="None"
                                AllowPerPixelScrolling="False"
                                ScrollAnimationMode="Linear"

                                AllowSorting="True"
                                AllowEditing="False"
                                AllowColumnFiltering="True"
                                VerticalAlignment="Stretch"
                                ShowHorizontalLines="False"
                                ShowVerticalLines="False"
                                ShowFocusedRectangle="False"
                                ShowIndicator="True"
                                RowIndicatorContentTemplate="{StaticResource customRowIndicatorTemplate}"                                                         
                                NavigationStyle="Row"
                                ShowNodeImages="{Binding ShowNodeImage}"
                                NodeImageSelector="{StaticResource ImageSelector}"
                                ShowColumnHeaders="{Binding ShowColumnHeaders}"
                                AutoExpandAllNodes="{Binding AutoExpandAllNodes}"
                                TreeLineStyle="Solid"
                                                         
                                RowDoubleClick="OnNodeDoubleClick"
                                CustomNodeFilter="TreeListView_OnCustomNodeFilter">

                                <i:Interaction.Behaviors>
                                    <exp:TreeListViewExpressionColumnBehavior ShowFormatConditionsEditorWindow="{Binding IsCustomization, Mode=TwoWay}" />
                                </i:Interaction.Behaviors>

                                <dxg:TreeListView.RowCellMenuCustomizations>
                                    <dxb:BarLinkContainerItem ItemLinksSource="{Binding Path=View.DataContext.ContextMenu}" ItemTemplateSelector="{StaticResource itemTemplateSelector}" />
                                    <dxb:BarItemLinkSeparator/>
                                    <dxb:BarButtonItem Content="{lex:LocExtension Key=wmsMLC.DCL.Resources:StringResources:CollapseAll}" ItemClick="BarItemCollapseAll_OnItemClick" />
                                    <dxb:BarButtonItem Content="{lex:LocExtension Key=wmsMLC.DCL.Resources:StringResources:ExpandAll}" ItemClick="BarItemExpandAll_OnItemClick" />
                                    <dxb:BarItemLinkSeparator/>
                                </dxg:TreeListView.RowCellMenuCustomizations>
                            </controls:CustomTreeListView>
                        </controls:CustomTreeListControl.View>
                    </controls:CustomTreeListControl>
                </dxdo:LayoutPanel>
                
                <dxdo:LayoutPanel Caption="{Binding SelectedItems[0].Cp.CustomParamName}" 
                    CaptionHorizontalAlignment="Center"
                    ItemWidth="0.35*"
                    AllowClose="False"
                    AllowHide="False">
                    <mv:ObjectView DataContext="{Binding Path=CustomParamValueObjectViewModel}"/>
                </dxdo:LayoutPanel>
            </dxdo:LayoutGroup>
        </dxdo:DockLayoutManager>

        <controls:CustomWaitIndicator Grid.Row="0" Grid.RowSpan="2" DeferedVisibility="{Binding Path=WaitIndicatorVisible, IsAsync=True}"/>
    </Grid>
</mv:DXPanelView>
